:root {
  --moondust: #999;
  --moon-size: 5em;
  --midnight-blue: #001;
  --starlight: #b0ac9e;
  --starlight-dark: #24241a;
  --sunlight: #bb4;
  --main-padding: 3rem;
  --owl-size: 150px;
}

* {
  box-sizing: border-box;
}

.hi {
  /* Big enough to fit the header on one line */
  max-width: 30em;
  /* Make sure it covers the moon if they overlap */
  z-index: 1;
}

/* Spinning hand */

/* A sprightly spin, and then a wave */
@keyframes wave {
  from {
    transform: rotate(0turn);
  }
  15% {
    transform: rotate(1turn);
  }
  30% {
    transform: rotate(1.07turn);
  }
  55% {
    transform: rotate(.93turn);
  }
  80% {
    transform: rotate(1.06turn);
  }
  to {
    transform: rotate(1turn);
  }
}
.spinny-hand {
  /* To enable rotating and wiggling about */
  display: inline-block;
  position: relative;
}
.spinny-hand:hover,
.spinny-hand:focus {
  animation: wave 2s linear;
}

/* My moon, my stars! */

/* My moon */
.moon-container {
  position: absolute;
  right: var(--main-padding);
  top: var(--main-padding);
}
.moon {
  height: var(--moon-size);
  width: var(--moon-size);
}
.moon-mask {
  background-color: var(--midnight-blue);
  border-radius: 50%;
  height: var(--moon-size);
  opacity: .98;
  position: absolute;
  /* We modify this property via JS, but include a default value as a fallback */
  right: var(--main-padding);
  /* Give the moon a bit of an offset so it's not a perfect crescent */
  bottom: .07em;
  width: var(--moon-size);
}

/* My stars */

/* Provide a conveniently hidden container for the stars */
.star-container {
  height: 100%;
  width: 100%;
  position: absolute;
  z-index: -1;
  overflow: hidden;
}

.star {
  color: var(--starlight);
  position: absolute;
  height: .5rem;
  width: .5rem;
  background-image: url("assets/star.svg");
  background-repeat: no-repeat;
  background-size: cover;
}

/* Mute Toggle */
.mute-label {
  align-items: center;
  background-color: #80000030;
  border-radius: 100%;
  display: flex;
  height: 2rem;
  justify-content: center;
  width: 2rem;
}

#mute-button {
  appearance: none;
  display: none;
}
#mute-button + .mute-button-icon:before {
  content: "ðŸ”Š";
}
#mute-button:checked + .mute-button-icon:before {
  content: "ðŸ”ˆ";
}

/* Cross the screen at a consistent speed regardless of screen size
 *
 * Rather than travel a distance relative to the screen width, the cross
 * is always 2000px (wayyyy  off to left field on small devices). For a given
 * `animation-duration` this gives a consistent pixel/second speed. The cross
 * can be sped up by decreasing the `animation-duration`, and slowed down by
 * increasing the `animation-duration`.
 *
 * `calc` doesn't handle time values well, so we can't change the speed
 * by calculating the `animation-duration` based on the view width.
 */
@keyframes cross {
  from {
    transform: translateX(var(--owl-size));
  }

  to {
    /* Choose a relatively large screen size as our constant so it handles large screens well. */
    transform: translateX(-2000px);
  }
}

/* Hiding it from within a nested div, instead of the body, avoids expanding the screen on mobile
 *
 * TODO: Specifying "overflow-y: visible" doesn't show owl. I have to make a div large enough to
 * actually display the owl for it to appear.
 */
.owl-sprite-hider {
  height: calc(var(--owl-size) + var(--main-padding));
  left: 0;
  overflow: hidden;
  position: absolute;
  top: 0;
  width: 100vw;
}
.owl-sprite {
  position: absolute;
  right: 0;
  top: var(--main-padding);
  /* 2000px/13s = ~150px/second */
  animation: cross 13s linear;
  /* The first owl screech is exactly at around 5s.
   * With the time it takes to enter the frame the owl shows up right when the screech happens.
   */
  animation-delay: 4s;
}
.owl-sprite .frame {
  position: absolute;
  top: 0;
  left: 0;
  height: var(--owl-size);
  width: var(--owl-size);
}

@keyframes blink1 {
  from {
    visibility: visible;
  }

  to {
    visibility: hidden;
  }
}
@keyframes blink2 {
  from {
    visibility: hidden;
  }

  to {
    visibility: visible;
  }
}

.owl-sprite .frame:nth-child(1) {
  animation: blink1 .75s infinite steps(2, jump-none);
  top: -37.5px;
}
.owl-sprite .frame:nth-child(2) {
  animation: blink2 .75s infinite steps(2, jump-none);
}

a {
  color: inherit;
  text-decoration: none;
}
a:hover, a:focus {
  text-decoration: underline;
}
main a {
  color: var(--sunlight);
  font-style: bold;
}

/* Icons */
.icon {
  height: 1.5rem;
  width: 1.5rem;
}

body {
  background-color: var(--midnight-blue);
  color: var(--starlight);
  display: flex;
  flex-direction: column;
  font-family: "Helvetica", "Arial", sans-serif;
  height: 100%;
  line-height: 1.5;
  /* Generally good practice, but specifically to allow hiding owl off screen */
  overflow-x: hidden;
  width: 100%;
}

footer {
  align-items: center;
  display: flex;
  justify-content: space-between;
  padding: 1rem;
}

.left-footer {
  align-items: center;
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
}
.left-footer > * {
  margin-right: 1em;
}

.credits {
  font-size: smaller;
  color: var(--starlight-dark);
}

h1 {
  font-size: 2em;
  margin-bottom: .5rem;
}

header {
  align-items: center;
  border-bottom: var(--starlight-dark) solid .1em;
  display: flex;
  justify-content: flex-end;
  padding: 1rem;
}

main {
  align-items: center;
  display: flex;
  flex-grow: 1;
  justify-content: center;
  height: 100%;
  padding: var(--main-padding);
  position: relative;
  width: 100%;
}

nav ul {
  display: flex;
}
nav ul li {
  padding-left: 1em;
  padding-right: 1em;
}
